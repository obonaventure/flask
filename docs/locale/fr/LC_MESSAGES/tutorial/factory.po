# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2010 Pallets
# This file is distributed under the same license as the Flask package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2020.
#
msgid ""
msgstr ""
"Project-Id-Version: Flask 1.1.x\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2020-03-12 16:28+0100\n"
"PO-Revision-Date: 2020-03-15 17:40+0100\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.7.0\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"
"Last-Translator: \n"
"Language-Team: \n"
"Language: fr\n"
"X-Generator: Poedit 2.0.6\n"

#: ../../tutorial/factory.rst:4
msgid "Application Setup"
msgstr "Configuration de l'application"

#: ../../tutorial/factory.rst:6
msgid ""
"A Flask application is an instance of the :class:`Flask` class. "
"Everything about the application, such as configuration and URLs, will "
"be registered with this class."
msgstr ""
"Une application Flask est une instance de la classe :class:`Flask`. Tout "
"ce qui concerne cette application, que ce soit sa configuration ou ses "
"URLs, sera enregistré dans cette classe."

#: ../../tutorial/factory.rst:10
msgid ""
"The most straightforward way to create a Flask application is to create "
"a global :class:`Flask` instance directly at the top of your code, like "
"how the \"Hello, World!\" example did on the previous page. While this "
"is simple and useful in some cases, it can cause some tricky issues as "
"the project grows."
msgstr ""
"La façon la plus simple de créer une application Flask est de créer une "
"instance de la classe :class:`Flask` globale, directement au début de "
"votre code, comme l'exemple \"Hello, World!\" sur la page précédente. "
"Bien que cette approche soit simple et utile dans certains cas, elle "
"peut causer des soucis lorsque le projet grandit."

#: ../../tutorial/factory.rst:16
msgid ""
"Instead of creating a :class:`Flask` instance globally, you will create "
"it inside a function. This function is known as the *application "
"factory*. Any configuration, registration, and other setup the "
"application needs will happen inside the function, then the application "
"will be returned."
msgstr ""
"Au lieu de créer un instance globale de la classe :class:`Flask`, vous "
"allez la créer dans une fonction. Cette fonction est généralement "
"appelée l'usine à applications (*application factory* en anglais). "
"Toutes les opérations liées à la configuration de l'application  doivent "
"se faire dans cette fonction qui retourne l'application."

#: ../../tutorial/factory.rst:24
msgid "The Application Factory"
msgstr "L'Usine à Applications"

#: ../../tutorial/factory.rst:26
msgid ""
"It's time to start coding! Create the ``flaskr`` directory and add the "
"``__init__.py`` file. The ``__init__.py`` serves double duty: it will "
"contain the application factory, and it tells Python that the ``flaskr`` "
"directory should be treated as a package."
msgstr ""
"Il est temps de commencer à coder. Créez le répertoire ``flaskr`` et "
"ajoutez-y le fichier ``__init__.py``. Le fichier ``__init__.py`` a deux "
"rôles. Tout d'abord, il contient l'usine à applications. Depuis, il "
"indique à Python que le répertoire ``flaskr`` doit être considéré comme "
"étant un package."

#: ../../tutorial/factory.rst:35
msgid "``flaskr/__init__.py``"
msgstr "``flaskr/__init__.py``"

#: ../../tutorial/factory.rst:71
msgid ""
"``create_app`` is the application factory function. You'll add to it "
"later in the tutorial, but it already does a lot."
msgstr ""
"``create_app`` est la fonction contenant l'usine à applications. Vous la "
"compléterez plus tard dans ce tutoriel, mais elle réalise déjà beaucoup "
"d'opérations."

#: ../../tutorial/factory.rst:74
msgid ""
"``app = Flask(__name__, instance_relative_config=True)`` creates the :"
"class:`Flask` instance."
msgstr ""
"``app = Flask(__name__, instance_relative_config=True)`` crée une "
"instance de la classe :class:`Flask`."

#: ../../tutorial/factory.rst:77
msgid ""
"``__name__`` is the name of the current Python module. The app needs to "
"know where it's located to set up some paths, and ``__name__`` is a "
"convenient way to tell it that."
msgstr ""
"``__name__`` est le nom du module Python courant. L'application doit "
"connaître l'endroit où est elle installée pour configurer certains "
"chemins et ``__name__`` est une solution classique pour obtenir cette "
"information."

#: ../../tutorial/factory.rst:81
msgid ""
"``instance_relative_config=True`` tells the app that configuration files "
"are relative to the :ref:`instance folder <instance-folders>`. The "
"instance folder is located outside the ``flaskr`` package and can hold "
"local data that shouldn't be committed to version control, such as "
"configuration secrets and the database file."
msgstr ""
"``instance_relative_config=True`` indique à l'application que les "
"fichiers de configuration sont relatifs au répertoire :ref:`instance "
"folder <instance-folders>`. Ce répertoire est localisé en dehors du "
"package ``flaskr`` et peut contenir des données locales qui ne doivent "
"pas être intégrées au contrôle de version, comme les secrets utilisés "
"dans la configuration et le fichier contenant la base de données."

#: ../../tutorial/factory.rst:88
msgid ""
":meth:`app.config.from_mapping() <Config.from_mapping>` sets some "
"default configuration that the app will use:"
msgstr ""
":meth:`app.config.from_mapping() <Config.from_mapping>` spécifie "
"plusieurs paramètres par défaut que l'application va utiliser:"

#: ../../tutorial/factory.rst:91
msgid ""
":data:`SECRET_KEY` is used by Flask and extensions to keep data safe. "
"It's set to ``'dev'`` to provide a convenient value during development, "
"but it should be overridden with a random value when deploying."
msgstr ""
":data:`SECRET_KEY` est utilisé par Flask et des extensions pour stocker "
"de données de façon sûre. Il est initialisé à la valeur ``'dev'`` qui "
"est une valeur facile pendant le développement de l'application, mais "
"doit être remplacé par une valeur aléatoire lorsque celle-ci est mise en "
"production."

#: ../../tutorial/factory.rst:96
msgid ""
"``DATABASE`` is the path where the SQLite database file will be saved. "
"It's under :attr:`app.instance_path <Flask.instance_path>`, which is the "
"path that Flask has chosen for the instance folder. You'll learn more "
"about the database in the next section."
msgstr ""
"``DATABASE`` est le chemin où le fichier contenant la base de données "
"SQLite sera sauvegardé. Le préfixe de ce fichier est  :attr:`app."
"instance_path <Flask.instance_path>`, c'est-à-dire le chemin choisi par "
"Flask comme `instance folder`. Vous en apprendrez plus sur la base de "
"données dans la section suivante."

#: ../../tutorial/factory.rst:102
msgid ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>` overrides the "
"default configuration with values taken from the ``config.py`` file in "
"the instance folder if it exists. For example, when deploying, this can "
"be used to set a real ``SECRET_KEY``."
msgstr ""
":meth:`app.config.from_pyfile() <Config.from_pyfile>` remplace le "
"configuration par défaut avec des paramètres spécifiés dans le fichier "
"``config.py`` qui se trouve dans l'*instance folder* si celui-ci exite. "
"Par exemple, en production, cela peut être utilisé pour fixer une "
"``SECRET_KEY`` vraiment secrète."

#: ../../tutorial/factory.rst:107
msgid ""
"``test_config`` can also be passed to the factory, and will be used "
"instead of the instance configuration. This is so the tests you'll write "
"later in the tutorial can be configured independently of any development "
"values you have configured."
msgstr ""
"La paramètre ``test_config`` peut aussi être passé à l'usine à "
"applications. Dans ce cas, il sera utilisé à la place de la "
"configuration de l'instance. Cela vous permettra de spécifier des "
"paramètres pour vos test qui sont indépendants de ceux que vous utilisez "
"durant le développement de l'application. "

#: ../../tutorial/factory.rst:112
msgid ""
":func:`os.makedirs` ensures that :attr:`app.instance_path <Flask."
"instance_path>` exists. Flask doesn't create the instance folder "
"automatically, but it needs to be created because your project will "
"create the SQLite database file there."
msgstr ""
":func:`os.makedirs` vérifie que le chemin :attr:`app.instance_path "
"<Flask.instance_path>` existe. Flask ne créer pas l'instance folder "
"automatiquement, mais celui-ci doit être créé car votre projet cherhera "
"à y créer le fichier contenant sa base de données SQLite."

#: ../../tutorial/factory.rst:118
msgid ""
":meth:`@app.route() <Flask.route>` creates a simple route so you can see "
"the application working before getting into the rest of the tutorial. It "
"creates a connection between the URL ``/hello`` and a function that "
"returns a response, the string ``'Hello, World!'`` in this case."
msgstr ""
":meth:`@app.route() <Flask.route>` crée une route simple de façon à vous "
"permettre de voir l'application fonctionner avant de faire l'entièreté "
"du tutoriel. Elle relie l'URL ``/hello`` à une fonction qui retourne une "
"réponse, dans ce cas la chaîne de caractères ``'Hello, World!'``."

#: ../../tutorial/factory.rst:126
msgid "Run The Application"
msgstr "Lancer l'application"

#: ../../tutorial/factory.rst:128
msgid ""
"Now you can run your application using the ``flask`` command. From the "
"terminal, tell Flask where to find your application, then run it in "
"development mode. Remember, you should still be in the top-level ``flask-"
"tutorial`` directory, not the ``flaskr`` package."
msgstr ""
"Vous pouvez maintenant lancer votre application en utilisant la commande "
"``flask``. Depuis le terminal, indiquez à Flask où trouver l'application "
"et ensuite lancez-le en mode dévelopemment. N'oubliez pas de vous placer "
"d'abord dans le répertoire ``flask-tutorial`` et non dans le package "
"``flaskr``."

#: ../../tutorial/factory.rst:133
msgid ""
"Development mode shows an interactive debugger whenever a page raises an "
"exception, and restarts the server whenever you make changes to the "
"code. You can leave it running and just reload the browser page as you "
"follow the tutorial."
msgstr ""
"Le mode développement lance automatiquement un débuger interactif "
"lorsqu'une page lance une exception et relance le serveur chaque fois "
"que vous modifiez votre code. Vous pouvez le laisser fonctionner et "
"devez juste recharger la page dans votre navigateur au fur et à mesure "
"de votre progression dans le tutoriel."

#: ../../tutorial/factory.rst:138
msgid "For Linux and Mac:"
msgstr "Pour Linux et Mac:"

#: ../../tutorial/factory.rst:146
msgid "For Windows cmd, use ``set`` instead of ``export``:"
msgstr ""
"Pour Windows via l'invite de commandes, utilisez ``set`` au lieu de "
"``export``:"

#: ../../tutorial/factory.rst:154
msgid "For Windows PowerShell, use ``$env:`` instead of ``export``:"
msgstr "Pour Windows Powershell, utilisez ``$env:`` au lieu de ``export``:"

#: ../../tutorial/factory.rst:162
msgid "You'll see output similar to this:"
msgstr ""
"Vous devrie observer une sortie équivalente au texte ci-dessous sur la "
"sortie standard:"

#: ../../tutorial/factory.rst:174
msgid ""
"Visit http://127.0.0.1:5000/hello in a browser and you should see the "
"\"Hello, World!\" message. Congratulations, you're now running your "
"Flask web application!"
msgstr ""
"Vous pouvez maintenant visiter l'URL http://127.0.0.1:5000/hello dans un "
"navigateur et vous devriez voir le message \"Hello, World!\". "
"Félicitations, vous exécutez maintenant votre première application web "
"en Flask!"

#: ../../tutorial/factory.rst:178
msgid "Continue to :doc:`database`."
msgstr "Continuez en lisant le document :doc:`database`."
